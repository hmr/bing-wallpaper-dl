#! /usr/bin/env bash
#
# vim: set noet syn=bash ft=sh ff=unix fenc=utf-8 ts=2 sw=0 : # GPP default modeline for shell script
# shellcheck shell=bash disable=SC1091,SC3010,SC3021,SC3037 source=${GPP_HOME}
# shellcheck shell=bash disable=SC2155
#
# bing-wallpaper-dl
# Download all wallpapers from Bing Wallpaprt Archive
#
# AUTHOR: hmr
# ORIGIN: 2020-11-15 20:30:00

set -e -u
shopt -s expand_aliases

declare DBG_MONTH
declare YEAR MONTH MONTH_NOW MONTH_LAST DL_BIN URL_BASE
declare OPT_ALL OPT_DIR_MONTH OPT_DIR_OUTPUT
declare -a TGT_MONTH_LST TGT_URL_LST

if ! date --version >& /dev/null; then
  if command -v gdate >& /dev/null; then
    alias date=gdate
  else
    echo "GNU date is required."
    exit 1
  fi
fi

YEAR_NOW=$(date +"%Y")
MONTH_NOW=$(date +"%Y%m")
MONTH_LAST=$(date --date='last month' +"%Y%m")

echo URL_BASE: ${URL_BASE:="https://bingwallpaper.anerg.com/us/"}

# TODO: Option processing
OPT_ALL=""
# TODO: Output directory must be specified by user.
OPT_DIR_OUTPUT="output"

DBG_MONTH=""

if command -v wget >& /dev/null; then
  DL_BIN="wget"
  echo wget found.
elif command -v curl >& /dev/null; then
  DL_BIN="curl"
  echo curl found.
else
  echo "Can't find either wget nor curl. Exit."
  exit 1;
fi
#DL_BIN="curl"


# Make sequence of year and month.
for YEAR in $(seq 2010 ${YEAR_NOW})
do
  for MONTH in $(printf '%02d ' {1..12})
  do
    TGT_MONTH_LST+=( ${YEAR}${MONTH} )
  done
done

# Download loop
for TGT_MONTH in ${TGT_MONTH_LST[@]}
do
  [ "${TGT_MONTH}" -gt ${MONTH_NOW} ] && continue
  [ "${TGT_MONTH}" -lt 201904 -a -z "${OPT_ALL}" ] && continue
  [ -n "${DBG_MONTH}" -a "${TGT_MONTH}" -ne "${MONTH_LAST}" ] && continue
  echo Target month: ${TGT_MONTH}
  URL_INDEX="${URL_BASE}${TGT_MONTH}"
  echo URL_INDEX: ${URL_INDEX}
  TGT_URL_LST=($(curl -s ${URL_INDEX} | grep '<img data-u="image"' | grep -o '//.*\.jpg' | sort -u | sed -e "s/\/\//http:\/\//" | tr "\n" " "))
  echo Downloading ${#TGT_URL_LST[@]} wallpapers using ${DL_BIN}.

  [ -d ${OPT_DIR_OUTPUT} ] || mkdir ${OPT_DIR_OUTPUT}

  if [ "${DL_BIN}" = "wget" ]; then
    wget -nc -nv -P ${OPT_DIR_OUTPUT} ${TGT_URL_LST[@]}
  elif [ "${DL_BIN}" = "curl" ]; then
    # TODO: Check image file existance.
    curl --remote-name-all --output-dir ${OPT_DIR_OUTPUT} --progress-bar ${TGT_URL_LST[@]}
  fi
done

